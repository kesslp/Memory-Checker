00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 5/23/2015 1:17:02 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Getting the address range from user
00000000                             3  * Written by : Paul Kessler
00000000                             4  * Date       : 5/23/2015 
00000000                             5  * Description: Gets starting and ending address range from user as a string and 
00000000                             6  *            : and converts from ascii to Hex
00000000                             7  *-----------------------------------------------------------
00000000  =000000FF                  8  mask    EQU         $00FF
00000000  =0000B000                  9  stack   EQU         $B000
00000000                            10  
00000400                            11          ORG         $400
00000400  4200                      12          CLR.B       D0                          * clears D0 cause we need it
00000402  43F9 0000052C             13          LEA         start_addr_msg, A1          * loads start address message
00000408  103C 000E                 14          MOVE.B      #14, D0                     * Displays message
0000040C  4E4F                      15          TRAP        #15
0000040E  103C 0002                 16          MOVE.B      #2, D0                      * takes user input as a string
00000412  4E4F                      17          TRAP        #15
00000414  23D1 00000588             18          MOVE.L      (A1),ascii_val_start        * Moves string to DC
0000041A                            19          
0000041A  4FF9 0000B000             20  start   LEA         stack,SP                    * initialize stack pointer
00000420  4247                      21          CLR.W       D7                          * We need D7 to be 0
00000422  43F9 00000588             22          LEA         ascii_val_start, A1         
00000428  1019                      23          MOVE.B      (A1)+,D0
0000042A  0240 00FF                 24          ANDI.W      #mask,D0
0000042E  4EB9 00000506             25          JSR         strip_ascii
00000434  E140                      26          ASL.W       #8,D0
00000436  E940                      27          ASL.W       #4,D0
00000438  8E40                      28          OR.W        D0,D7
0000043A  1019                      29          MOVE.B      (A1)+,D0
0000043C  0240 00FF                 30          ANDI.W      #mask,D0
00000440  4EB9 00000506             31          JSR         strip_ascii
00000446  E140                      32          ASL.W       #8,D0
00000448  8E40                      33          OR.W        D0,D7
0000044A  1019                      34          MOVE.B      (A1)+,D0
0000044C  0240 00FF                 35          ANDI.W      #mask,D0
00000450  4EB9 00000506             36          JSR         strip_ascii
00000456  E940                      37          ASL.W       #4,D0
00000458  8E40                      38          OR.W        D0,D7
0000045A  1019                      39          MOVE.B      (A1)+,D0
0000045C  0240 00FF                 40          ANDI.W      #mask,D0
00000460  4EB9 00000506             41          JSR         strip_ascii
00000466  8E40                      42          OR.W        D0,D7
00000468  33C7 0000058C             43          MOVE.W      D7,st_val
0000046E  3C79 0000058C             44          MOVEA.W     st_val, A6
00000474                            45              
00000474  43F9 00000557             46          LEA         end_addr_msg, A1
0000047A  103C 000E                 47          MOVE.B      #14, D0
0000047E  4E4F                      48          TRAP        #15
00000480  224C                      49          MOVEA.L     A4,A1
00000482  103C 0002                 50          MOVE.B      #2, D0
00000486  4E4F                      51          TRAP        #15
00000488  23D1 0000058A             52          MOVE.L      (A1),ascii_val_end
0000048E                            53          
0000048E  4247                      54          CLR.W       D7
00000490  43F9 0000058A             55          LEA         ascii_val_end, A1
00000496  1019                      56          MOVE.B      (A1)+,D0
00000498  0240 00FF                 57          ANDI.W      #mask,D0
0000049C  4EB9 00000506             58          JSR         strip_ascii
000004A2  E140                      59          ASL.W       #8,D0
000004A4  E940                      60          ASL.W       #4,D0
000004A6  8E40                      61          OR.W        D0,D7
000004A8  1019                      62          MOVE.B      (A1)+,D0
000004AA  0240 00FF                 63          ANDI.W      #mask,D0
000004AE  4EB9 00000506             64          JSR         strip_ascii
000004B4  E140                      65          ASL.W       #8,D0
000004B6  8E40                      66          OR.W        D0,D7
000004B8  1019                      67          MOVE.B      (A1)+,D0
000004BA  0240 00FF                 68          ANDI.W      #mask,D0
000004BE  4EB9 00000506             69          JSR         strip_ascii
000004C4  E940                      70          ASL.W       #4,D0
000004C6  8E40                      71          OR.W        D0,D7
000004C8  1019                      72          MOVE.B      (A1)+,D0
000004CA  0240 00FF                 73          ANDI.W      #mask,D0
000004CE  4EB9 00000506             74          JSR         strip_ascii
000004D4  8E40                      75          OR.W        D0,D7
000004D6  33C7 0000058E             76          MOVE.W      D7,end_val
000004DC                            77          
000004DC  4280                      78          CLR.L       D0
000004DE  4281                      79          CLR.L       D1
000004E0  33CE 0000058C             80          MOVE.W      A6, st_val
000004E6  3039 0000058C             81          MOVE.W      st_val,D0
000004EC  3239 0000058E             82          MOVE.W      end_val,D1
000004F2  3079 0000058C             83          MOVEA.W     st_val,A0
000004F8  3279 0000058E             84          MOVEA.W     end_val,A1
000004FE  2610                      85          MOVE.L      (A0),D3
00000500  2811                      86          MOVE.L      (A1),D4
00000502  FFFF FFFF                 87          SIMHALT
00000506                            88  
00000506  B03C 0039                 89  strip_ascii CMP.B   #$39,D0 *Is it in range of 0-9?
0000050A  6F00 001A                 90              BLE     sub30   *It's a number
0000050E  B03C 0046                 91              CMP.B   #$46,D0 *Is it A...F?
00000512  6F00 000A                 92              BLE     sub37   *It's A...F
00000516  0400 0057                 93              SUB.B   #$57,D0 *It's a...f
0000051A  6000 000E                 94              BRA     ret_sa  *Go back
0000051E  0400 0037                 95  sub37       SUB.B   #$37,D0 *Strip 37
00000522  6000 0006                 96              BRA     ret_sa  *Go back
00000526  0400 0030                 97  sub30       SUB.B   #$30,D0 *Strip 30
0000052A  4E75                      98  ret_sa      RTS             *Go back
0000052C                            99  
0000052C                           100  * Data
0000052C                           101          
0000052C= 45 6E 74 65 72 20 ...    102  start_addr_msg  DC.B    'Enter a starting address to disassemble: $', 0
00000557= 45 6E 74 65 72 20 ...    103  end_addr_msg    DC.B    'Enter a ending address to stop disassembling: $', 0
00000588= 0000                     104  ascii_val_start DC.W    $0000
0000058A= 0000                     105  ascii_val_end   DC.W    $0000
0000058C= 0000                     106  st_val          DC.W    $0000
0000058E= 0000                     107  end_val         DC.W    $0000
00000590                           108              END     $400   

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ASCII_VAL_END       58A
ASCII_VAL_START     588
END_ADDR_MSG        557
END_VAL             58E
MASK                FF
RET_SA              52A
STACK               B000
START               41A
START_ADDR_MSG      52C
STRIP_ASCII         506
ST_VAL              58C
SUB30               526
SUB37               51E
